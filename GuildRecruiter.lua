-- Saved variables (per account)
GR_Settings = GR_Settings or {
    enabled = false,
    message = "üåü –ì–∏–ª—å–¥–∏—è <–ù–∞–∑–≤–∞–Ω–∏–µ> –Ω–∞–±–∏—Ä–∞–µ—Ç –∏–≥—Ä–æ–∫–æ–≤! –ü–∏—à–∏—Ç–µ /w –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.",
    channelType = "SAY",   -- SAY, YELL, GUILD, PARTY, RAID, CHANNEL
    channelId = nil,       -- –¥–ª—è CHANNEL (—á–∏—Å–ª–æ–≤–æ–π ID)
    interval = 300,        -- —Å–µ–∫, –º–∏–Ω–∏–º—É–º 120
    skipInInstance = true, -- –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ –∏–Ω—Å—Ç–∞–Ω—Å–∞—Ö
    randomize = false,     -- –µ—Å–ª–∏ –±—É–¥–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    templates = {}         -- –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –¥–ª—è randomize
}

local addonName = "GuildRecruiter"
local elapsed = 0
local MIN_INTERVAL = 120

local function colored(msg)
    print("|cff00ff00[GR]|r " .. msg)
end

local function pickMessage()
    if GR_Settings.randomize and type(GR_Settings.templates) == "table" and #GR_Settings.templates > 0 then
        return GR_Settings.templates[math.random(#GR_Settings.templates)]
    end
    return GR_Settings.message
end

local function canAnnounce()
    if GR_Settings.skipInInstance then
        local inInstance = IsInInstance()
        if inInstance then return false end
    end
    if UnitIsAFK("player") then return false end
    return true
end

local function send()
    if not canAnnounce() then return end
    local msg = pickMessage()
    local ctype = GR_Settings.channelType
    if ctype == "CHANNEL" then
        if not GR_Settings.channelId then
            colored("–ù–µ –∑–∞–¥–∞–Ω channelId –¥–ª—è CHANNEL. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /gr chan CHANNEL <id>")
            return
        end
        SendChatMessage(msg, "CHANNEL", nil, GR_Settings.channelId)
    else
        SendChatMessage(msg, ctype)
    end
end

-- OnUpdate timer
local frame = CreateFrame("Frame")
frame:SetScript("OnUpdate", function(_, delta)
    if not GR_Settings.enabled then return end
    elapsed = elapsed + delta
    local interval = math.max(MIN_INTERVAL, tonumber(GR_Settings.interval) or MIN_INTERVAL)
    if elapsed >= interval then
        send()
        elapsed = 0
    end
end)

-- Commands
SLASH_GR1 = "/gr"
SlashCmdList["GR"] = function(msg)
    local cmd, a, b = msg:match("^(%S*)%s*(%S*)%s*(.*)$")
    cmd = string.lower(cmd or "")

    if cmd == "on" then
        GR_Settings.enabled = true
        colored("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥ –í–ö–õ")
        elapsed = 0

    elseif cmd == "off" then
        GR_Settings.enabled = false
        colored("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥ –í–´–ö–õ")

    elseif cmd == "msg" and b ~= "" then
        GR_Settings.message = msg:sub(5):gsub("^%s+", "")
        colored("–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ")

    elseif cmd == "int" and tonumber(a) then
        GR_Settings.interval = tonumber(a)
        colored("–ò–Ω—Ç–µ—Ä–≤–∞–ª: " .. GR_Settings.interval .. " —Å–µ–∫ (–º–∏–Ω. " .. MIN_INTERVAL .. ")")

    elseif cmd == "chan" then
        local ctype = string.upper(a or "")
        if ctype == "CHANNEL" then
            local id = tonumber(b)
            if id then
                GR_Settings.channelType = "CHANNEL"
                GR_Settings.channelId = id
                colored("–ö–∞–Ω–∞–ª: CHANNEL c ID " .. id)
            else
                colored("–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID –¥–ª—è CHANNEL: /gr chan CHANNEL <id>")
            end
        elseif ctype ~= "" then
            GR_Settings.channelType = ctype
            GR_Settings.channelId = nil
            colored("–ö–∞–Ω–∞–ª: " .. ctype)
        else
            colored("–¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª: " .. GR_Settings.channelType .. (GR_Settings.channelId and (" ("..GR_Settings.channelId..")") or ""))
        end

    elseif cmd == "status" then
        colored(string.format("enabled=%s, interval=%s, channel=%s%s",
            tostring(GR_Settings.enabled),
            tostring(GR_Settings.interval),
            tostring(GR_Settings.channelType),
            GR_Settings.channelId and ("("..GR_Settings.channelId..")") or ""))

    elseif cmd == "skipinst" then
        if a == "on" then GR_Settings.skipInInstance = true
        elseif a == "off" then GR_Settings.skipInInstance = false end
        colored("skipInInstance=" .. tostring(GR_Settings.skipInInstance))

    else
        print("|cffffff00–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:|r")
        print("/gr on|off ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å")
        print("/gr msg <—Ç–µ–∫—Å—Ç> ‚Äî –∑–∞–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print("/gr int <—Å–µ–∫> ‚Äî –∏–Ω—Ç–µ—Ä–≤–∞–ª (–º–∏–Ω. 120)")
        print("/gr chan <TYPE> [id] ‚Äî –∫–∞–Ω–∞–ª (SAY/YELL/GUILD/PARTY/RAID/CHANNEL id)")
        print("/gr skipinst on|off ‚Äî –±–ª–æ–∫ –≤ –∏–Ω—Å—Ç–∞–Ω—Å–∞—Ö")
        print("/gr status ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    end
end

-- –ò–Ω—Ñ–æ –ø—Ä–∏ –≤—Ö–æ–¥–µ
local f = CreateFrame("Frame")
f:RegisterEvent("PLAYER_LOGIN")
f:SetScript("OnEvent", function()
    colored("–ó–∞–≥—Ä—É–∂–µ–Ω. /gr –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.")
end)
