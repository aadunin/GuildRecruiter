-- Saved variables (per account)
GR_Settings = GR_Settings or {
    message = "üåü –ì–∏–ª—å–¥–∏—è <–ù–∞–∑–≤–∞–Ω–∏–µ> –Ω–∞–±–∏—Ä–∞–µ—Ç –∏–≥—Ä–æ–∫–æ–≤! –ü–∏—à–∏—Ç–µ /w –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.",
    channelType = "SAY", -- SAY, YELL, GUILD, PARTY, RAID, CHANNEL
    channelId = nil,     -- –¥–ª—è CHANNEL (—á–∏—Å–ª–æ–≤–æ–π ID)
    randomize = false,   -- true ‚Äî –±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —à–∞–±–ª–æ–Ω
    templates = {}       -- –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –¥–ª—è randomize
}

local function colored(msg) print("|cff00ff00[GR]|r " .. msg) end
local function trim(s) return (s or ""):gsub("^%s+", ""):gsub("%s+$", "") end

-- –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤)
local function normalizeChannelName(name)
    local s = (name ~= nil) and tostring(name) or ""
    return string.lower(
        s:gsub("|c%x%x%x%x%x%x%x%x", "") -- —É–±—Ä–∞—Ç—å —Ü–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã
         :gsub("|r", "")
         :gsub("^%s+", "")
         :gsub("%s+$", "")
    )
end

local function pickMessage()
    if GR_Settings.randomize and type(GR_Settings.templates) == "table" and #GR_Settings.templates > 0 then
        return GR_Settings.templates[math.random(#GR_Settings.templates)]
    end
    return GR_Settings.message
end

local function send()
    local msg = pickMessage()
    local ctype = GR_Settings.channelType
    if ctype == "CHANNEL" then
        if not GR_Settings.channelId then
            colored("–ù–µ –∑–∞–¥–∞–Ω channelId –¥–ª—è CHANNEL. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /gru chan CHANNEL <id|name>")
            return
        end
        SendChatMessage(msg, "CHANNEL", nil, GR_Settings.channelId)
    else
        SendChatMessage(msg, ctype)
    end
end

-- Slash-–∫–æ–º–∞–Ω–¥—ã
SLASH_GRU1 = "/gru"
SlashCmdList["GRU"] = function(msg)
    local cmd, a, b = msg:match("^(%S*)%s*(%S*)%s*(.*)$")
    cmd = string.lower(cmd or "")

    if cmd == "msg" then
        local text = trim((a or "") .. (b ~= "" and (" " .. b) or ""))
        if text ~= "" then
            GR_Settings.message = text
            colored("–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ")
        else
            colored("–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç: /gru msg <—Ç–µ–∫—Å—Ç>")
        end

    elseif cmd == "chan" then
        local ctype = string.upper(a or "")
        if ctype == "CHANNEL" then
            if b ~= "" then
                local input = trim(b)
                local id = tonumber(input)
                if id then
                    GR_Settings.channelType = "CHANNEL"
                    GR_Settings.channelId = id
                    colored("–ö–∞–Ω–∞–ª: CHANNEL —Å ID " .. id)
                else
                    local foundId, foundName
                    local chanList = { GetChannelList() }
                    local i = 1
                    while i <= #chanList do
                        local chanId   = chanList[i]
                        local chanName = chanList[i + 1]
                        local maybeFlg = chanList[i + 2]
                        if type(chanId) == "number" and type(chanName) == "string" then
                            if normalizeChannelName(chanName) == normalizeChannelName(input) then
                                foundId, foundName = chanId, chanName
                                break
                            end
                        end
                        if type(maybeFlg) == "boolean" then
                            i = i + 3
                        else
                            i = i + 2
                        end
                    end

                    if foundId then
                        GR_Settings.channelType = "CHANNEL"
                        GR_Settings.channelId = foundId
                        colored(string.format("–ö–∞–Ω–∞–ª: CHANNEL ¬´%s¬ª —Å ID %d", foundName, foundId))
                    else
                        colored("–ö–∞–Ω–∞–ª '" .. input .. "' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å: /join " .. input)
                    end
                end
            else
                colored("–£–∫–∞–∂–∏—Ç–µ ID –∏–ª–∏ –∏–º—è –∫–∞–Ω–∞–ª–∞: /gru chan CHANNEL <id|name>")
            end

        elseif ctype ~= "" then
            GR_Settings.channelType = ctype
            GR_Settings.channelId = nil
            colored("–ö–∞–Ω–∞–ª: " .. ctype)
        else
            colored("–¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª: " .. tostring(GR_Settings.channelType) ..
                (GR_Settings.channelId and (" (" .. GR_Settings.channelId .. ")") or ""))
        end

    elseif cmd == "random" then
        if a == "on" then
            GR_Settings.randomize = true
        elseif a == "off" then
            GR_Settings.randomize = false
        end
        colored("randomize=" .. tostring(GR_Settings.randomize))

    elseif cmd == "addtmpl" then
        local text = trim((a or "") .. (b ~= "" and (" " .. b) or ""))
        if text ~= "" then
            table.insert(GR_Settings.templates, text)
            colored("–®–∞–±–ª–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω. –í—Å–µ–≥–æ: " .. #GR_Settings.templates)
        else
            colored("–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞: /gru addtmpl <—Ç–µ–∫—Å—Ç>")
        end

    elseif cmd == "clrtmpl" then
        GR_Settings.templates = {}
        colored("–®–∞–±–ª–æ–Ω—ã –æ—á–∏—â–µ–Ω—ã")

    elseif cmd == "status" then
        colored(string.format(
            "channel=%s%s, randomize=%s, templates=%d",
            tostring(GR_Settings.channelType),
            GR_Settings.channelId and ("(" .. GR_Settings.channelId .. ")") or "",
            tostring(GR_Settings.randomize),
            #GR_Settings.templates
        ))

    elseif cmd == "send" then
        send()

    elseif cmd == "listchannels" then
        local chanList = { GetChannelList() }
        if #chanList == 0 then
            colored("–í—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –Ω–∏ –∫ –æ–¥–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º—É –∫–∞–Ω–∞–ª—É.")
            return
        end
        colored("–°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤:")
        local i = 1
        while i <= #chanList do
            local chanId   = chanList[i]
            local chanName = chanList[i + 1]
            local maybeFlg = chanList[i + 2]
            if type(chanId) == "number" and type(chanName) == "string" then
                print(string.format("[%d] %s", chanId, chanName))
            end
            if type(maybeFlg) == "boolean" then
                i = i + 3
            else
                i = i + 2
            end
        end

    else
        print("|cffffff00–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:|r")
        print("/gru msg <—Ç–µ–∫—Å—Ç> ‚Äî –∑–∞–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print("/gru chan <TYPE> [id|name] ‚Äî –∫–∞–Ω–∞–ª (SAY/YELL/GUILD/PARTY/RAID/CHANNEL)")
        print("/gru random on|off ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—é")
        print("/gru addtmpl <—Ç–µ–∫—Å—Ç> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω")
        print("/gru clrtmpl ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å —à–∞–±–ª–æ–Ω—ã")
        print("/gru status ‚Äî —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        print("/gru send ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é")
        print("/gru listchannels ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    end
end

-- –ò–Ω—Ñ–æ –ø—Ä–∏ –≤—Ö–æ–¥–µ
local f = CreateFrame("Frame")
f:RegisterEvent("PLAYER_LOGIN")
f:SetScript("OnEvent", function()
    colored("–ó–∞–≥—Ä—É–∂–µ–Ω. /gru –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏. –ê–≤—Ç–æ-—Ç–∞–π–º–µ—Ä–æ–≤ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /gru send.")
end)
