-- ==============================
-- GuildRecruiter ‚Äî –í–µ—Ä—Å–∏—è 2.0
-- ==============================

-- Saved variables (per account)
GR_Settings = GR_Settings or {
    message     = "üåü –ì–∏–ª—å–¥–∏—è <–ù–∞–∑–≤–∞–Ω–∏–µ> –Ω–∞–±–∏—Ä–∞–µ—Ç –∏–≥—Ä–æ–∫–æ–≤! –ü–∏—à–∏—Ç–µ /w –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.",
    channelType = "SAY",     -- SAY, YELL, GUILD, PARTY, RAID, CHANNEL
    channelId   = nil,       -- –¥–ª—è CHANNEL (—á–∏—Å–ª–æ–≤–æ–π ID)
    randomize   = false,     -- true ‚Äî –±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —à–∞–±–ª–æ–Ω
    templates   = {}         -- –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –¥–ª—è randomize
}

-- ==== –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è/—Å–æ–æ–±—â–µ–Ω–∏—è ====
local MSG = {
    msg_changed        = "–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ",
    msg_need_text      = "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç: /gru msg <—Ç–µ–∫—Å—Ç>",
    channel_set        = "–ö–∞–Ω–∞–ª: %s",
    channel_current    = "–¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª: %s",
    channel_need_input = "–£–∫–∞–∂–∏—Ç–µ ID –∏–ª–∏ –∏–º—è –∫–∞–Ω–∞–ª–∞: /gru chan CHANNEL <id|name>",
    channel_not_found  = "–ö–∞–Ω–∞–ª '%s' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å: /join %s",
    channel_id_not_found = "–ö–∞–Ω–∞–ª —Å ID %d –Ω–µ –Ω–∞–π–¥–µ–Ω.",
    random_state       = "randomize=%s, —à–∞–±–ª–æ–Ω–æ–≤: %d",
    tmpl_added         = "–®–∞–±–ª–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω. –í—Å–µ–≥–æ: %d",
    tmpl_need_text     = "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞: /gru addtmpl <—Ç–µ–∫—Å—Ç>",
    tmpl_cleared       = "–®–∞–±–ª–æ–Ω—ã –æ—á–∏—â–µ–Ω—ã",
    no_channels        = "–í—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –Ω–∏ –∫ –æ–¥–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º—É –∫–∞–Ω–∞–ª—É.",
    channels_list      = "–°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤:",
    no_channel_id      = "–ù–µ –∑–∞–¥–∞–Ω channelId –¥–ª—è CHANNEL. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /gru chan CHANNEL <id|name>",
    send_done          = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ %s",
    random_empty_warn  = "–í–∫–ª—é—á–µ–Ω–∞ —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—è, –Ω–æ —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ—Ç ‚Äî –æ—Ç–∫–ª—é—á–µ–Ω–æ.",
}

-- ==== –£—Ç–∏–ª–∏—Ç—ã ====
local function colored(msg)
    print("|cff00ff00[GR]|r " .. msg)
end

local function trim(s)
    return (s or ""):gsub("^%s+", ""):gsub("%s+$", "")
end

local function normalizeChannelName(name)
    local s = (name ~= nil) and tostring(name) or ""
    return string.lower(
        s:gsub("|c%x%x%x%x%x%x%x%x", "")
         :gsub("|r", "")
         :gsub("^%s+", "")
         :gsub("%s+$", "")
    )
end

local function iterateChannels(callback)
    local chanList = { GetChannelList() }
    local i = 1
    while i <= #chanList do
        local chanId   = chanList[i]
        local chanName = chanList[i + 1]
        local maybeFlg = chanList[i + 2]
        if type(chanId) == "number" and type(chanName) == "string" then
            if callback(chanId, chanName) then
                return true
            end
        end
        i = i + (type(maybeFlg) == "boolean" and 3 or 2)
    end
end

-- –ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
local function concatArgs(a, b)
    return trim((a or "") .. (b ~= "" and (" " .. b) or ""))
end

-- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–∞
local function findChannel(input)
    local id = tonumber(input)
    if id then
        local exists
        iterateChannels(function(chanId)
            if chanId == id then exists = true return true end
        end)
        return exists and id or nil
    else
        local foundId
        iterateChannels(function(chanId, chanName)
            if normalizeChannelName(chanName) == normalizeChannelName(input) then
                foundId = chanId return true
            end
        end)
        return foundId
    end
end

-- ==== –õ–æ–≥–∏–∫–∞ ====
local function pickMessage()
    if GR_Settings.randomize then
        if #GR_Settings.templates > 0 then
            return GR_Settings.templates[math.random(#GR_Settings.templates)]
        else
            GR_Settings.randomize = false
            colored(MSG.random_empty_warn)
        end
    end
    return GR_Settings.message
end

local function send()
    local msg = pickMessage()
    if GR_Settings.channelType == "CHANNEL" then
        if not GR_Settings.channelId then
            return colored(MSG.no_channel_id)
        end
        SendChatMessage(msg, "CHANNEL", nil, GR_Settings.channelId)
        colored(string.format(MSG.send_done, "CHANNEL("..GR_Settings.channelId..")"))
    else
        SendChatMessage(msg, GR_Settings.channelType)
        colored(string.format(MSG.send_done, GR_Settings.channelType))
    end
end

local function printStatus()
    print("|cffffff00–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:|r")
    print(string.format("  –ö–∞–Ω–∞–ª: %s%s",
        tostring(GR_Settings.channelType),
        GR_Settings.channelId and (" ("..GR_Settings.channelId..")") or ""))
    print("  –†–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—è:", GR_Settings.randomize and "–≤–∫–ª." or "–≤—ã–∫–ª.")
    print("  –®–∞–±–ª–æ–Ω–æ–≤:", #GR_Settings.templates)
    print("  –°–æ–æ–±—â–µ–Ω–∏–µ:", GR_Settings.message)
end

local function printHelp()
    print("|cffffff00–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:|r")
    print("/gru msg <—Ç–µ–∫—Å—Ç> ‚Äî –∑–∞–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
    print("/gru chan <TYPE> [id|name] ‚Äî –∫–∞–Ω–∞–ª (SAY/YELL/GUILD/PARTY/RAID/CHANNEL)")
    print("/gru random on|off ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—é")
    print("/gru addtmpl <—Ç–µ–∫—Å—Ç> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω")
    print("/gru clrtmpl ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å —à–∞–±–ª–æ–Ω—ã")
    print("/gru status ‚Äî —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("/gru send ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é")
    print("/gru listchannels ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
end

-- ==== –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ ====
SLASH_GRU1 = "/gru"
SlashCmdList["GRU"] = function(msg)
    local cmd, a, b = msg:match("^(%S*)%s*(%S*)%s*(.*)$")
    cmd = string.lower(cmd or "")

    if cmd == "msg" then
        local text = concatArgs(a, b)
        if text ~= "" then
            GR_Settings.message = text
            colored(MSG.msg_changed)
        else
            colored(MSG.msg_need_text)
        end

    elseif cmd == "chan" then
        local ctype = string.upper(a or "")
        if ctype == "CHANNEL" then
            local input = trim(b)
            if input == "" then
                return colored(MSG.channel_need_input)
            end
            local id = findChannel(input)
            if id then
                GR_Settings.channelType = "CHANNEL"
                GR_Settings.channelId = id
                colored(string.format(MSG.channel_set, "CHANNEL ("..id..")"))
            else
                if tonumber(input) then
                    colored(string.format(MSG.channel_id_not_found, tonumber(input)))
                else
                    colored(string.format(MSG.channel_not_found, input, input))
                end
            end
        elseif ctype ~= "" then
            GR_Settings.channelType = ctype
            GR_Settings.channelId = nil
            colored(string.format(MSG.channel_set, ctype))
        else
            colored(string.format(MSG.channel_current,
                tostring(GR_Settings.channelType) ..
                (GR_Settings.channelId and (" ("..GR_Settings.channelId..")") or "")
            ))
        end

    elseif cmd == "random" then
        if a == "on" then
            GR_Settings.randomize = true
        elseif a == "off" then
            GR_Settings.randomize = false
        end
        colored(string.format(MSG.random_state, tostring(GR_Settings.randomize), #GR_Settings.templates))

    elseif cmd == "addtmpl" then
        local text = concatArgs(a, b)
        if text ~= "" then
            -- –∑–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
            for _, tmpl in ipairs(GR_Settings.templates) do
                if tmpl == text then
                    return colored("–¢–∞–∫–æ–π —à–∞–±–ª–æ–Ω —É–∂–µ –µ—Å—Ç—å")
                end
            end
            table.insert(GR_Settings.templates, text)
            colored(string.format(MSG.tmpl_added, #GR_Settings.templates))
        else
            colored(MSG.tmpl_need_text)
        end

    elseif cmd == "clrtmpl" then
        GR_Settings.templates = {}
        colored(MSG.tmpl_cleared)

    elseif cmd == "status" then
        printStatus()

    elseif cmd == "send" then
        send()

    elseif cmd == "listchannels" then
        local empty = true
        iterateChannels(function(chanId, chanName)
            if empty then colored(MSG.channels_list) empty = false end
            print(string.format("[%d] %s", chanId, chanName))
        end)
        if empty then
            colored(MSG.no_channels)
        end

    else
        printHelp()
    end
end

-- ==== –ü—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∏–≥—Ä—É ====
local f = CreateFrame("Frame")
f:RegisterEvent("PLAYER_LOGIN")
f:SetScript("OnEvent", function()
    colored("–ó–∞–≥—Ä—É–∂–µ–Ω. /gru –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.")
end)
