-- ==============================
-- GuildRecruiter ‚Äî –í–µ—Ä—Å–∏—è 2.1
-- ==============================

-- Saved variables (per account)
GR_Settings = GR_Settings or {
  message = "üåü –ì–∏–ª—å–¥–∏—è –ú–µ—Å—Ç–Ω—ã–µ –î–µ–¥—ã –Ω–∞–±–∏—Ä–∞–µ—Ç –∏–≥—Ä–æ–∫–æ–≤! –ü–∏—à–∏—Ç–µ /w –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.",
  channelType = "SAY", -- SAY, YELL, GUILD, PARTY, RAID, CHANNEL
  channelId = nil, -- –¥–ª—è CHANNEL (—á–∏—Å–ª–æ–≤–æ–π ID)
  randomize = false, -- true ‚Äî –±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —à–∞–±–ª–æ–Ω
  templates = {} -- –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –¥–ª—è randomize
}

-- ==== –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è/—Å–æ–æ–±—â–µ–Ω–∏—è ====
local MSG = {
  msg_changed = "–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ",
  msg_need_text = "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç: /gru msg <—Ç–µ–∫—Å—Ç>",
  channel_set = "–ö–∞–Ω–∞–ª: %s",
  channel_current = "–¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª: %s",
  channel_need_input = "–£–∫–∞–∂–∏—Ç–µ ID –∏–ª–∏ –∏–º—è –∫–∞–Ω–∞–ª–∞: /gru chan CHANNEL <id|name>",
  channel_not_found = "–ö–∞–Ω–∞–ª '%s' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å: /join %s",
  channel_id_not_found = "–ö–∞–Ω–∞–ª —Å ID %d –Ω–µ –Ω–∞–π–¥–µ–Ω.",
  random_state = "randomize=%s, —à–∞–±–ª–æ–Ω–æ–≤: %d",
  tmpl_added = "–®–∞–±–ª–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω. –í—Å–µ–≥–æ: %d",
  tmpl_need_text = "–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç —à–∞–±–ª–æ–Ω–∞: /gru addtmpl <—Ç–µ–∫—Å—Ç>",
  tmpl_cleared = "–®–∞–±–ª–æ–Ω—ã –æ—á–∏—â–µ–Ω—ã",
  no_channels = "–í—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –Ω–∏ –∫ –æ–¥–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º—É –∫–∞–Ω–∞–ª—É.",
  channels_list = "–°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤:",
  no_channel_id = "–ù–µ –∑–∞–¥–∞–Ω channelId –¥–ª—è CHANNEL. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /gru chan CHANNEL <id|name>",
  send_done = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ %s",
  random_empty_warn = "–í–∫–ª—é—á–µ–Ω–∞ —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—è, –Ω–æ —à–∞–±–ª–æ–Ω–æ–≤ –Ω–µ—Ç ‚Äî –æ—Ç–∫–ª—é—á–µ–Ω–æ.",
}

-- ==== –£—Ç–∏–ª–∏—Ç—ã ====
local function colored(msg) print("|cff00ff00[GR]|r " .. msg) end
local function trim(s) return (s or ""):gsub("^%s+", ""):gsub("%s+$", "") end
local function normalizeChannelName(name)
  local s = tostring(name or "")
  return s:lower()
    :gsub("|c%x%x%x%x%x%x%x%x", "")
    :gsub("|r", "")
    :gsub("^%s+", "")
    :gsub("%s+$", "")
end
local function iterateChannels(callback)
  local chanList = { GetChannelList() }
  local i = 1
  while i <= #chanList do
    local chanId, chanName, maybeFlg = chanList[i], chanList[i + 1], chanList[i + 2]
    if type(chanId) == "number" and type(chanName) == "string" then
      if callback(chanId, chanName) then return true end
    end
    i = i + (type(maybeFlg) == "boolean" and 3 or 2)
  end
end

-- –°–∫–ª–µ–π–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
local function concatArgs(a, b) return trim(table.concat({ a or "", b or "" }, " ")) end

-- –ü–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–∞ –ø–æ ID –∏–ª–∏ –∏–º–µ–Ω–∏ (–æ–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥)
local function findChannel(input)
  local searchId = tonumber(input)
  local normInput = normalizeChannelName(input)
  local foundId
  iterateChannels(function(chanId, chanName)
    if (searchId and chanId == searchId) or (not searchId and normalizeChannelName(chanName) == normInput) then
      foundId = chanId
      return true
    end
  end)
  return foundId
end

-- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∏–ø–∞ –∫–∞–Ω–∞–ª–∞
local function setChannel(ctype, input)
  if ctype == "CHANNEL" then
    if not input or input == "" then return colored(MSG.channel_need_input) end
    local id = findChannel(input)
    if id then
      GR_Settings.channelType = "CHANNEL"
      GR_Settings.channelId = id
      colored(string.format(MSG.channel_set, "CHANNEL (" .. id .. ")"))
    else
      if tonumber(input) then
        colored(string.format(MSG.channel_id_not_found, tonumber(input)))
      else
        colored(string.format(MSG.channel_not_found, input, input))
      end
    end
  else
    GR_Settings.channelType = ctype
    GR_Settings.channelId = nil
    colored(string.format(MSG.channel_set, ctype))
  end
end

-- ==== –õ–æ–≥–∏–∫–∞ ====
local function pickMessage()
  if GR_Settings.randomize then
    if #GR_Settings.templates > 0 then
      return GR_Settings.templates[math.random(#GR_Settings.templates)]
    else
      GR_Settings.randomize = false
      colored(MSG.random_empty_warn)
    end
  end
  return GR_Settings.message
end

local function send()
  local msg = pickMessage()
  if GR_Settings.channelType == "CHANNEL" then
    if not GR_Settings.channelId then return colored(MSG.no_channel_id) end
    SendChatMessage(msg, "CHANNEL", nil, GR_Settings.channelId)
    colored(string.format(MSG.send_done, "CHANNEL(" .. GR_Settings.channelId .. ")"))
  else
    SendChatMessage(msg, GR_Settings.channelType)
    colored(string.format(MSG.send_done, GR_Settings.channelType))
  end
end

local function printStatus()
  print("|cffffff00–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:|r")
  print(string.format(" –ö–∞–Ω–∞–ª: %s%s", tostring(GR_Settings.channelType), GR_Settings.channelId and (" (" .. GR_Settings.channelId .. ")") or ""))
  print(" –†–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—è:", GR_Settings.randomize and "–≤–∫–ª." or "–≤—ã–∫–ª.")
  print(" –®–∞–±–ª–æ–Ω–æ–≤:", #GR_Settings.templates)
  print(" –°–æ–æ–±—â–µ–Ω–∏–µ:", GR_Settings.message)
end

local function printHelp()
  print("|cffffff00–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:|r")
  print("/gru msg <—Ç–µ–∫—Å—Ç> ‚Äî –∑–∞–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
  print("/gru chan <TYPE> [id|name] ‚Äî –∫–∞–Ω–∞–ª (SAY/YELL/GUILD/PARTY/RAID/CHANNEL)")
  print("/gru random on|off ‚Äî –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—é")
  print("/gru addtmpl <—Ç–µ–∫—Å—Ç> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω")
  print("/gru clrtmpl ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å —à–∞–±–ª–æ–Ω—ã")
  print("/gru status ‚Äî —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
  print("/gru send ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é")
  print("/gru listchannels ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
end

-- ==== –ö–æ–º–∞–Ω–¥—ã ====
SLASH_GUILDRECRUITER1 = "/gru"
SlashCmdList["GUILDRECRUITER"] = function(cmd)
  local a, b = cmd:match("^(%S*)%s*(.-)$")
  a = a:lower()

  if a == "msg" then
    if b == "" then return colored(MSG.msg_need_text) end
    GR_Settings.message = b
    colored(MSG.msg_changed)

  elseif a == "chan" then
    local ctype, rest = b:match("^(%S+)%s*(.-)$")
    if not ctype then return colored(MSG.channel_need_input) end
    setChannel(ctype:upper(), rest)

  elseif a == "random" then
    if b == "on" then
      GR_Settings.randomize = true
    elseif b == "off" then
      GR_Settings.randomize = false
    else
      return colored("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /gru random on|off")
    end
    colored(string.format(MSG.random_state, tostring(GR_Settings.randomize), #GR_Settings.templates))

  elseif a == "addtmpl" then
    if b == "" then
        return colored(MSG.tmpl_need_text)
    end
    -- –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
    for _, tmpl in ipairs(GR_Settings.templates) do
        if tmpl == b then
            colored("–®–∞–±–ª–æ–Ω —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
            return
        end
    end
    table.insert(GR_Settings.templates, b)
    colored(string.format(MSG.tmpl_added, #GR_Settings.templates))

  elseif a == "clrtmpl" then
    GR_Settings.templates = {}
    colored(MSG.tmpl_cleared)

  elseif a == "status" then
    printStatus()

  elseif a == "send" then
    send()

  elseif a == "help" then
    printHelp()

  elseif a == "listchannels" then
    local found = false
    iterateChannels(function(id, name)
      if not found then
        colored(MSG.channels_list)
        found = true
      end
      print(string.format("  [%d] %s", id, name))
    end)
    if not found then colored(MSG.no_channels) end

  else
    printHelp()
  end
end

-- ==== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ====
local frame = CreateFrame("Frame")
frame:RegisterEvent("ADDON_LOADED")
frame:SetScript("OnEvent", function(self, event, addon)
  if addon == "GuildRecruiter" then
    GR_Settings.templates = GR_Settings.templates or {}
    colored("GuildRecruiter –∑–∞–≥—Ä—É–∂–µ–Ω. –í–≤–µ–¥–∏—Ç–µ /gru help –¥–ª—è –ø–æ–º–æ—â–∏.")
  end
end)
